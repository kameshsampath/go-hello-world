---
kind: pipeline
type: docker
name: setup
steps:
- name: create cluster
  image: docker.io/kameshsampath/kube-dev-tools:0.1.5
  commands:
  - |
     k3d cluster create $K3D_CLUSTER_NAME --network=$K3D_CLUSTER_NAME
  volumes:
  - name: docker-sock
    path: /var/run/docker.sock
volumes:
  - name: docker-sock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
type: docker
name: default

steps:
  - name: test
    image: golang:1.19
    pull: if-not-exists
    commands:
      - go clean -testcache
      - go test ./... -v

  - name: build
    image: kameshsampath/kube-dev-tools:0.1.5
    pull: if-not-exists
    commands:
      - ./bin/build.sh
    volumes:
    - name: docker-sock
      path: /var/run/docker.sock
volumes:
  - name: docker-sock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
type: docker
name: verify

steps:
  - name: verify signatures
    image: kameshsampath/kube-dev-tools:0.1.5
    pull: if-not-exists
    commands:
     - ./bin/verify.sh
    volumes:
    - name: docker-sock
      path: /var/run/docker.sock
volumes:
  - name: docker-sock
    host:
      path: /var/run/docker.sock
---
kind: pipeline
type: docker
name: delete-cluster
steps:
- name: delete
  image: docker.io/kameshsampath/kube-dev-tools:0.1.5
  commands:
  - |
     k3d cluster delete "$K3D_CLUSTER_NAME"
     docker network rm  "$K3D_CLUSTER_NAME"
     rm -f "$DRONE_WORKSPACE/cosign.pub" "$DRONE_WORKSPACE/image-refs.txt"
  volumes:
  - name: docker-sock
    path: /var/run/docker.sock
volumes:
  - name: docker-sock
    host:
      path: /var/run/docker.sock